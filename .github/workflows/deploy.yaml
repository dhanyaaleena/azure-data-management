name: Build and Deploy to AKS

on:
  push:
    branches:
      - master  # Trigger on push to main branch
  workflow_dispatch: 

env:
  RESOURCE_GROUP: ${{ secrets.RESOURCE_GROUP }}
  ACR_NAME: ${{ secrets.ACR_NAME }}
  IMAGE_NAME: ${{ secrets.IMAGE_NAME }}
  IMAGE_TAG: "latest"
  # CLUSTER_NAME: ${{ secrets.AKS_CLUSTER_NAME }}
  NAMESPACE: "default" 
  VM_IP: ${{ secrets.VM_IP }}
  APP_ID: ${{ secrets.APP_ID }}
  CLIENT_SECRET : ${{ secrets.CLIENT_SECRET }}
  TENANT_ID: ${{ secrets.TENANT_ID }}

jobs:
  # build-and-push:
  #   name: Build and Push Docker Image to ACR
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout Repository
  #       uses: actions/checkout@v3

  #     - name: Login to Azure
  #       uses: azure/login@v1
  #       with:
  #         creds: ${{ secrets.AZURE_CREDENTIALS }}

  #     - name: Login to Azure Container Registry
  #       run: |
  #         az acr login --name $ACR_NAME

  #     - name: Build and Push Docker Image
  #       run: |
  #         docker build -t $ACR_NAME.azurecr.io/$IMAGE_NAME:latest.
  #         docker push $ACR_NAME.azurecr.io/$IMAGE_NAME:latest

  deploy-to-vm:
    name: Deploy to Virtual Machine
    runs-on: ubuntu-latest
    # needs: build-and-push 
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Deploy to VM
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.VM_IP }}
          username: azureuser
          password: ${{ secrets.PASSWORD }}
          script: |
            az login --service-principal --username $APP_ID --password $CLIENT_ID --tenant $TENANT_ID
            az acr login --name $ACR_NAME
            docker pull $ACR_NAME.azurecr.io/$IMAGE_NAME:latest
            docker stop $IMAGE_NAME || true
            docker rm $IMAGE_NAME || true
            docker run -d --name $IMAGE_NAME -p 80:80 $ACR_NAME.azurecr.io/$IMAGE_NAME:latest

  # deploy-to-aks:
  #   name: Deploy to AKS
  #   runs-on: ubuntu-latest
  #   needs: build-and-push  # Run after image is pushed
  #   steps:
  #     - name: Checkout Repository
  #       uses: actions/checkout@v3

  #     - name: Login to Azure
  #       uses: azure/login@v1
  #       with:
  #         creds: ${{ secrets.AZURE_CREDENTIALS }}

  #     - name: Get AKS Credentials
  #       run: |
  #         az aks get-credentials --resource-group $RESOURCE_GROUP --name $CLUSTER_NAME

  #     - name: Deploy to AKS
  #       run: |
  #         kubectl apply -f k8s/deployment.yml
  #         kubectl apply -f k8s/service.yml

  #     - name: Verify Deployment
  #       run: |
  #         kubectl rollout status deployment/$IMAGE_NAME -n $NAMESPACE
